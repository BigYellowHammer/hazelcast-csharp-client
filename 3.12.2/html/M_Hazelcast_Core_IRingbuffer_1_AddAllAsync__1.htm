<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IRingbuffer(T).AddAllAsync(TE) Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="AddAllAsync%3CTE%3E method" /><meta name="System.Keywords" content="AddAllAsync(Of TE) method" /><meta name="System.Keywords" content="IRingbuffer%3CT%3E.AddAllAsync%3CTE%3E method" /><meta name="System.Keywords" content="IRingbuffer(Of T).AddAllAsync(Of TE) method" /><meta name="Microsoft.Help.F1" content="Hazelcast.Core.IRingbuffer`1.AddAllAsync``1" /><meta name="Microsoft.Help.Id" content="M:Hazelcast.Core.IRingbuffer`1.AddAllAsync``1(System.Collections.Generic.ICollection{``0},Hazelcast.Core.OverflowPolicy)" /><meta name="Description" content="Adds all the items of a collection to the tail of the Ringbuffer." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Hazelcast.Core" /><meta name="file" content="M_Hazelcast_Core_IRingbuffer_1_AddAllAsync__1" /><meta name="guid" content="M_Hazelcast_Core_IRingbuffer_1_AddAllAsync__1" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Hazelcast .Net Client Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\G_Hazelcast_Client.htm" title="Hazelcast .Net Client Class Library" tocid="roottoc">Hazelcast .Net Client Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Hazelcast_Core.htm" title="Hazelcast.Core" tocid="N_Hazelcast_Core">Hazelcast.Core</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IRingbuffer_1.htm" title="IRingbuffer(T) Interface" tocid="T_Hazelcast_Core_IRingbuffer_1">IRingbuffer(T) Interface</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Hazelcast_Core_IRingbuffer_1.htm" title="IRingbuffer(T) Methods" tocid="Methods_T_Hazelcast_Core_IRingbuffer_1">IRingbuffer(T) Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_Add.htm" title="Add Method " tocid="M_Hazelcast_Core_IRingbuffer_1_Add">Add Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_AddAllAsync__1.htm" title="AddAllAsync(TE) Method " tocid="M_Hazelcast_Core_IRingbuffer_1_AddAllAsync__1">AddAllAsync(TE) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_AddAsync.htm" title="AddAsync Method " tocid="M_Hazelcast_Core_IRingbuffer_1_AddAsync">AddAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_Capacity.htm" title="Capacity Method " tocid="M_Hazelcast_Core_IRingbuffer_1_Capacity">Capacity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_HeadSequence.htm" title="HeadSequence Method " tocid="M_Hazelcast_Core_IRingbuffer_1_HeadSequence">HeadSequence Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_ReadManyAsync.htm" title="ReadManyAsync Method " tocid="M_Hazelcast_Core_IRingbuffer_1_ReadManyAsync">ReadManyAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_ReadOne.htm" title="ReadOne Method " tocid="M_Hazelcast_Core_IRingbuffer_1_ReadOne">ReadOne Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_RemainingCapacity.htm" title="RemainingCapacity Method " tocid="M_Hazelcast_Core_IRingbuffer_1_RemainingCapacity">RemainingCapacity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_Size.htm" title="Size Method " tocid="M_Hazelcast_Core_IRingbuffer_1_Size">Size Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_TailSequence.htm" title="TailSequence Method " tocid="M_Hazelcast_Core_IRingbuffer_1_TailSequence">TailSequence Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Hazelcast-IMDG-Logo-Orange_Dark_200px.jpg" /></td><td class="titleColumn"><h1>IRingbuffer<span id="LSTAFE729D3_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LSTAFE729D3_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTAFE729D3_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_2?cpp=::|nu=.");</script>AddAllAsync<span id="LSTAFE729D3_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TE</span><span id="LSTAFE729D3_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">Adds all the items of a collection to the tail of the Ringbuffer.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Hazelcast_Core.htm">Hazelcast.Core</a><br />
    <strong>Assembly:</strong>
   Hazelcast.Net (in Hazelcast.Net.dll) Version: 3.12.2<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="identifier">Task</span>&lt;<span class="identifier">long</span>&gt; <span class="identifier">AddAllAsync</span>&lt;TE&gt;(
	<span class="identifier">ICollection</span>&lt;TE&gt; <span class="parameter">collection</span>,
	<span class="identifier">OverflowPolicy</span> <span class="parameter">overflowPolicy</span>
)
<span class="keyword">where</span> TE : T
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Function</span> <span class="identifier">AddAllAsync</span>(<span class="keyword">Of</span> TE <span class="keyword">As</span> T) ( 
	<span class="parameter">collection</span> <span class="keyword">As</span> <span class="identifier">ICollection</span>(<span class="keyword">Of</span> TE),
	<span class="parameter">overflowPolicy</span> <span class="keyword">As</span> <span class="identifier">OverflowPolicy</span>
) <span class="keyword">As</span> <span class="identifier">Task</span>(<span class="keyword">Of</span> <span class="identifier">Long</span>)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TE&gt;
<span class="keyword">where</span> TE : T
<span class="identifier">Task</span>&lt;<span class="identifier">long long</span>&gt;^ <span class="identifier">AddAllAsync</span>(
	<span class="identifier">ICollection</span>&lt;TE&gt;^ <span class="parameter">collection</span>, 
	<span class="identifier">OverflowPolicy</span> <span class="parameter">overflowPolicy</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">abstract</span> <span class="identifier">AddAllAsync</span> : 
        <span class="parameter">collection</span> : <span class="identifier">ICollection</span>&lt;'TE&gt; * 
        <span class="parameter">overflowPolicy</span> : <span class="identifier">OverflowPolicy</span> <span class="keyword">-&gt;</span> <span class="identifier">Task</span>&lt;<span class="identifier">int64</span>&gt;  <span class="keyword">when</span> 'TE : 'T
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">collection</span></dt><dd>Type: <span class="nolink">System.Collections.Generic<span id="LSTAFE729D3_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ICollection</span><span id="LSTAFE729D3_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TE</span></span><span id="LSTAFE729D3_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />the batch of items to add.</dd><dt><span class="parameter">overflowPolicy</span></dt><dd>Type: <a href="T_Hazelcast_Core_OverflowPolicy.htm">Hazelcast.Core<span id="LSTAFE729D3_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OverflowPolicy</a><br />overflow policy to use</dd></dl><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TE</span></dt><dd /></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">Task</span><span id="LSTAFE729D3_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="nolink">Int64</span><span id="LSTAFE729D3_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />the ICompletableFuture to synchronize on completion.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><span class="nolink">ArgumentNullException</span></td><td>
            if batch is null,
            or if an item in this batch is null
            or if overflowPolicy is null
            </td></tr><tr><td><span class="nolink">ArgumentException</span></td><td>if collection is empty</td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">
            Adds all the items of a collection to the tail of the Ringbuffer.
            A addAll is likely to outperform multiple calls to
            <a href="M_Hazelcast_Core_IRingbuffer_1_Add.htm">Add(T)</a>
            due to better io utilization and a reduced number
            of executed operations.
            If the batch is empty, the call is ignored.
            When the collection is not empty, the content is copied into a different data-structure. This means that:
            <ol><li>after this call completes, the collection can be re-used.</li><li>the collection doesn't need to be serializable</li></ol>
            If the collection is larger than the capacity of the ringbuffer, then the items that were written first will
            be overwritten. Therefor this call will not block.
            The items are inserted in the order of the Iterator of the collection. If an addAll is executed concurrently with
            an add or addAll, no guarantee is given that items are contiguous.
            The result of the future contains the sequenceId of the last written item
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Hazelcast_Core_IRingbuffer_1.htm">IRingbuffer<span id="LSTAFE729D3_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_11?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTAFE729D3_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAFE729D3_12?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script> Interface</a></div><div class="seeAlsoStyle"><a href="N_Hazelcast_Core.htm">Hazelcast.Core Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.</p> </div></body></html>