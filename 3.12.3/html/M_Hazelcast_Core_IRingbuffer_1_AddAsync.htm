<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IRingbuffer(T).AddAsync Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="AddAsync method" /><meta name="System.Keywords" content="IRingbuffer%3CT%3E.AddAsync method" /><meta name="System.Keywords" content="IRingbuffer(Of T).AddAsync method" /><meta name="Microsoft.Help.F1" content="Hazelcast.Core.IRingbuffer`1.AddAsync" /><meta name="Microsoft.Help.Id" content="M:Hazelcast.Core.IRingbuffer`1.AddAsync(`0,Hazelcast.Core.OverflowPolicy)" /><meta name="Description" content="Asynchronously writes an item with a configurable . If there is space in the ringbuffer, the call will return the sequence of the written item." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Hazelcast.Core" /><meta name="file" content="M_Hazelcast_Core_IRingbuffer_1_AddAsync" /><meta name="guid" content="M_Hazelcast_Core_IRingbuffer_1_AddAsync" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Hazelcast .Net Client Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\G_Hazelcast_Client.htm" title="Hazelcast .Net Client Class Library" tocid="roottoc">Hazelcast .Net Client Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Hazelcast_Core.htm" title="Hazelcast.Core" tocid="N_Hazelcast_Core">Hazelcast.Core</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IRingbuffer_1.htm" title="IRingbuffer(T) Interface" tocid="T_Hazelcast_Core_IRingbuffer_1">IRingbuffer(T) Interface</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Hazelcast_Core_IRingbuffer_1.htm" title="IRingbuffer(T) Methods" tocid="Methods_T_Hazelcast_Core_IRingbuffer_1">IRingbuffer(T) Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_Add.htm" title="Add Method " tocid="M_Hazelcast_Core_IRingbuffer_1_Add">Add Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_AddAllAsync__1.htm" title="AddAllAsync(TE) Method " tocid="M_Hazelcast_Core_IRingbuffer_1_AddAllAsync__1">AddAllAsync(TE) Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_AddAsync.htm" title="AddAsync Method " tocid="M_Hazelcast_Core_IRingbuffer_1_AddAsync">AddAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_Capacity.htm" title="Capacity Method " tocid="M_Hazelcast_Core_IRingbuffer_1_Capacity">Capacity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_HeadSequence.htm" title="HeadSequence Method " tocid="M_Hazelcast_Core_IRingbuffer_1_HeadSequence">HeadSequence Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_ReadManyAsync.htm" title="ReadManyAsync Method " tocid="M_Hazelcast_Core_IRingbuffer_1_ReadManyAsync">ReadManyAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_ReadOne.htm" title="ReadOne Method " tocid="M_Hazelcast_Core_IRingbuffer_1_ReadOne">ReadOne Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_RemainingCapacity.htm" title="RemainingCapacity Method " tocid="M_Hazelcast_Core_IRingbuffer_1_RemainingCapacity">RemainingCapacity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_Size.htm" title="Size Method " tocid="M_Hazelcast_Core_IRingbuffer_1_Size">Size Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IRingbuffer_1_TailSequence.htm" title="TailSequence Method " tocid="M_Hazelcast_Core_IRingbuffer_1_TailSequence">TailSequence Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Hazelcast-IMDG-Logo-Orange_Dark_200px.jpg" /></td><td class="titleColumn"><h1>IRingbuffer<span id="LSTA8ED7CAF_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">T</span><span id="LSTA8ED7CAF_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTA8ED7CAF_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_2?cpp=::|nu=.");</script>AddAsync Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Asynchronously writes an item with a configurable
            <a href="T_Hazelcast_Core_OverflowPolicy.htm">OverflowPolicy</a>
            .
            If there is space in the ringbuffer, the call will return the sequence of the written item.
            If there is no space, it depends on the overflow policy what happens:
            <ol><li><a href="T_Hazelcast_Core_OverflowPolicy.htm">Overwrite</a>
            : we just overwrite the oldest item in the ringbuffer and we violate
            the ttl</li><li><a href="T_Hazelcast_Core_OverflowPolicy.htm">Fail</a>
            : we return -1 </li></ol>
            The reason that FAIL exist is to give the opportunity to obey the ttl. If blocking behavior is required,
            this can be implemented using retrying in combination with a exponential backoff. Example:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAEBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">int</span> sleepMs = <span class="highlight-number">100</span>;
<span class="highlight-keyword">for</span> (; ; ) {
<span class="highlight-keyword">long</span> result = ringbuffer.AddAsync(item, OverflowPolicy.Fail).Result;
<span class="highlight-keyword">if</span> (result != <span class="highlight-number">-1</span>) {
<span class="highlight-keyword">break</span>;
}
Thread.Sleep(sleepMs);
sleepMs = Math.Min(<span class="highlight-number">5000</span>, sleepMs * <span class="highlight-number">2</span>);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAEBA");</script></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Hazelcast_Core.htm">Hazelcast.Core</a><br />
    <strong>Assembly:</strong>
   Hazelcast.Net (in Hazelcast.Net.dll) Version: 3.12.3<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="identifier">Task</span>&lt;<span class="identifier">long</span>&gt; <span class="identifier">AddAsync</span>(
	T <span class="parameter">item</span>,
	<span class="identifier">OverflowPolicy</span> <span class="parameter">overflowPolicy</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Function</span> <span class="identifier">AddAsync</span> ( 
	<span class="parameter">item</span> <span class="keyword">As</span> T,
	<span class="parameter">overflowPolicy</span> <span class="keyword">As</span> <span class="identifier">OverflowPolicy</span>
) <span class="keyword">As</span> <span class="identifier">Task</span>(<span class="keyword">Of</span> <span class="identifier">Long</span>)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="identifier">Task</span>&lt;<span class="identifier">long long</span>&gt;^ <span class="identifier">AddAsync</span>(
	T <span class="parameter">item</span>, 
	<span class="identifier">OverflowPolicy</span> <span class="parameter">overflowPolicy</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">abstract</span> <span class="identifier">AddAsync</span> : 
        <span class="parameter">item</span> : 'T * 
        <span class="parameter">overflowPolicy</span> : <span class="identifier">OverflowPolicy</span> <span class="keyword">-&gt;</span> <span class="identifier">Task</span>&lt;<span class="identifier">int64</span>&gt; 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">item</span></dt><dd>Type: <a href="T_Hazelcast_Core_IRingbuffer_1.htm"><span class="typeparameter">T</span></a><br />the item to add</dd><dt><span class="parameter">overflowPolicy</span></dt><dd>Type: <a href="T_Hazelcast_Core_OverflowPolicy.htm">Hazelcast.Core<span id="LSTA8ED7CAF_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OverflowPolicy</a><br />the OverflowPolicy to use.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span class="nolink">Task</span><span id="LSTA8ED7CAF_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="nolink">Int64</span><span id="LSTA8ED7CAF_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />the sequenceId of the added item, or -1 if the add failed.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><span class="nolink">ArgumentNullException</span></td><td>if item or overflowPolicy is null.</td></tr></table></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Hazelcast_Core_IRingbuffer_1.htm">IRingbuffer<span id="LSTA8ED7CAF_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LSTA8ED7CAF_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA8ED7CAF_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script> Interface</a></div><div class="seeAlsoStyle"><a href="N_Hazelcast_Core.htm">Hazelcast.Core Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.</p> </div></body></html>