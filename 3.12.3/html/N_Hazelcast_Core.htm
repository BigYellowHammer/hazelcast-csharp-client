<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Hazelcast.Core Namespace</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Hazelcast.Core namespace" /><meta name="Microsoft.Help.F1" content="Hazelcast.Core" /><meta name="Microsoft.Help.Id" content="N:Hazelcast.Core" /><meta name="Description" content="Hazelcast Core" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Hazelcast.Core" /><meta name="file" content="N_Hazelcast_Core" /><meta name="guid" content="N_Hazelcast_Core" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Hazelcast .Net Client Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\G_Hazelcast_Client.htm" title="Hazelcast .Net Client Class Library" tocid="roottoc">Hazelcast .Net Client Class Library</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Hazelcast_Core.htm" title="Hazelcast.Core" tocid="N_Hazelcast_Core">Hazelcast.Core</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_AbstractAggregator_1.htm" title="AbstractAggregator(R) Class" tocid="T_Hazelcast_Core_AbstractAggregator_1">AbstractAggregator(R) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_AbstractMapEvent.htm" title="AbstractMapEvent Class" tocid="T_Hazelcast_Core_AbstractMapEvent">AbstractMapEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_Aggregators.htm" title="Aggregators Class" tocid="T_Hazelcast_Core_Aggregators">Aggregators Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_AndPredicate.htm" title="AndPredicate Class" tocid="T_Hazelcast_Core_AndPredicate">AndPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_BetweenPredicate.htm" title="BetweenPredicate Class" tocid="T_Hazelcast_Core_BetweenPredicate">BetweenPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_BigIntegerSumAggregator.htm" title="BigIntegerSumAggregator Class" tocid="T_Hazelcast_Core_BigIntegerSumAggregator">BigIntegerSumAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_ClientType.htm" title="ClientType Enumeration" tocid="T_Hazelcast_Core_ClientType">ClientType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ConsistencyLostException.htm" title="ConsistencyLostException Class" tocid="T_Hazelcast_Core_ConsistencyLostException">ConsistencyLostException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_CountAggregator.htm" title="CountAggregator Class" tocid="T_Hazelcast_Core_CountAggregator">CountAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_DataAwareEntryEvent_2.htm" title="DataAwareEntryEvent(TKey, TValue) Class" tocid="T_Hazelcast_Core_DataAwareEntryEvent_2">DataAwareEntryEvent(TKey, TValue) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_DistributedObjectDestroyedException.htm" title="DistributedObjectDestroyedException Class" tocid="T_Hazelcast_Core_DistributedObjectDestroyedException">DistributedObjectDestroyedException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_DistributedObjectEvent.htm" title="DistributedObjectEvent Class" tocid="T_Hazelcast_Core_DistributedObjectEvent">DistributedObjectEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_DistributedObjectEvent_EventType.htm" title="DistributedObjectEvent.EventType Class" tocid="T_Hazelcast_Core_DistributedObjectEvent_EventType">DistributedObjectEvent.EventType Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_DoubleAverageAggregator.htm" title="DoubleAverageAggregator Class" tocid="T_Hazelcast_Core_DoubleAverageAggregator">DoubleAverageAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_DoubleSumAggregator.htm" title="DoubleSumAggregator Class" tocid="T_Hazelcast_Core_DoubleSumAggregator">DoubleSumAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryAdapter_2.htm" title="EntryAdapter(TKey, TValue) Class" tocid="T_Hazelcast_Core_EntryAdapter_2">EntryAdapter(TKey, TValue) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryAddedListener_2.htm" title="EntryAddedListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_EntryAddedListener_2">EntryAddedListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryEvent_2.htm" title="EntryEvent(TKey, TValue) Class" tocid="T_Hazelcast_Core_EntryEvent_2">EntryEvent(TKey, TValue) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_EntryEventType.htm" title="EntryEventType Enumeration" tocid="T_Hazelcast_Core_EntryEventType">EntryEventType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryEvictedListener_2.htm" title="EntryEvictedListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_EntryEvictedListener_2">EntryEvictedListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryExpiredListener_2.htm" title="EntryExpiredListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_EntryExpiredListener_2">EntryExpiredListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryMergedListener_2.htm" title="EntryMergedListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_EntryMergedListener_2">EntryMergedListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryRemovedListener_2.htm" title="EntryRemovedListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_EntryRemovedListener_2">EntryRemovedListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EntryUpdatedListener_2.htm" title="EntryUpdatedListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_EntryUpdatedListener_2">EntryUpdatedListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EqualPredicate.htm" title="EqualPredicate Class" tocid="T_Hazelcast_Core_EqualPredicate">EqualPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_EventObject.htm" title="EventObject Class" tocid="T_Hazelcast_Core_EventObject">EventObject Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_FalsePredicate.htm" title="FalsePredicate Class" tocid="T_Hazelcast_Core_FalsePredicate">FalsePredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_FixedSumAggregator.htm" title="FixedSumAggregator Class" tocid="T_Hazelcast_Core_FixedSumAggregator">FixedSumAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_FloatingPointSumAggregator.htm" title="FloatingPointSumAggregator Class" tocid="T_Hazelcast_Core_FloatingPointSumAggregator">FloatingPointSumAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_GreaterLessPredicate.htm" title="GreaterLessPredicate Class" tocid="T_Hazelcast_Core_GreaterLessPredicate">GreaterLessPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_HazelcastException.htm" title="HazelcastException Class" tocid="T_Hazelcast_Core_HazelcastException">HazelcastException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_HazelcastInstanceNotActiveException.htm" title="HazelcastInstanceNotActiveException Class" tocid="T_Hazelcast_Core_HazelcastInstanceNotActiveException">HazelcastInstanceNotActiveException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_HazelcastJsonValue.htm" title="HazelcastJsonValue Class" tocid="T_Hazelcast_Core_HazelcastJsonValue">HazelcastJsonValue Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IAggregator_1.htm" title="IAggregator(TResult) Class" tocid="T_Hazelcast_Core_IAggregator_1">IAggregator(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IAtomicLong.htm" title="IAtomicLong Interface" tocid="T_Hazelcast_Core_IAtomicLong">IAtomicLong Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IClient.htm" title="IClient Interface" tocid="T_Hazelcast_Core_IClient">IClient Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IClientListener.htm" title="IClientListener Interface" tocid="T_Hazelcast_Core_IClientListener">IClientListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IClientService.htm" title="IClientService Interface" tocid="T_Hazelcast_Core_IClientService">IClientService Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ICluster.htm" title="ICluster Interface" tocid="T_Hazelcast_Core_ICluster">ICluster Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ICountDownLatch.htm" title="ICountDownLatch Interface" tocid="T_Hazelcast_Core_ICountDownLatch">ICountDownLatch Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IDistributedObject.htm" title="IDistributedObject Interface" tocid="T_Hazelcast_Core_IDistributedObject">IDistributedObject Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IDistributedObjectListener.htm" title="IDistributedObjectListener Interface" tocid="T_Hazelcast_Core_IDistributedObjectListener">IDistributedObjectListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IEndpoint.htm" title="IEndpoint Interface" tocid="T_Hazelcast_Core_IEndpoint">IEndpoint Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IEntryListener_2.htm" title="IEntryListener(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IEntryListener_2">IEntryListener(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IEntryView_2.htm" title="IEntryView(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IEntryView_2">IEntryView(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_IEventListener.htm" title="IEventListener Interface" tocid="T_Hazelcast_Core_IEventListener">IEventListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IExecutionCallback_1.htm" title="IExecutionCallback(T) Interface" tocid="T_Hazelcast_Core_IExecutionCallback_1">IExecutionCallback(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IExecutorService.htm" title="IExecutorService Interface" tocid="T_Hazelcast_Core_IExecutorService">IExecutorService Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IHazelcastInstance.htm" title="IHazelcastInstance Interface" tocid="T_Hazelcast_Core_IHazelcastInstance">IHazelcastInstance Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IHazelcastInstanceAware.htm" title="IHazelcastInstanceAware Interface" tocid="T_Hazelcast_Core_IHazelcastInstanceAware">IHazelcastInstanceAware Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IHCollection_1.htm" title="IHCollection(T) Interface" tocid="T_Hazelcast_Core_IHCollection_1">IHCollection(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IHList_1.htm" title="IHList(T) Interface" tocid="T_Hazelcast_Core_IHList_1">IHList(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IHSet_1.htm" title="IHSet(T) Interface" tocid="T_Hazelcast_Core_IHSet_1">IHSet(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IIdGenerator.htm" title="IIdGenerator Interface" tocid="T_Hazelcast_Core_IIdGenerator">IIdGenerator Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IInitialMembershipListener.htm" title="IInitialMembershipListener Interface" tocid="T_Hazelcast_Core_IInitialMembershipListener">IInitialMembershipListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IItemListener_1.htm" title="IItemListener(TE) Interface" tocid="T_Hazelcast_Core_IItemListener_1">IItemListener(TE) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ILifecycleListener.htm" title="ILifecycleListener Interface" tocid="T_Hazelcast_Core_ILifecycleListener">ILifecycleListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ILifecycleService.htm" title="ILifecycleService Interface" tocid="T_Hazelcast_Core_ILifecycleService">ILifecycleService Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ILikePredicate.htm" title="ILikePredicate Class" tocid="T_Hazelcast_Core_ILikePredicate">ILikePredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ILock.htm" title="ILock Interface" tocid="T_Hazelcast_Core_ILock">ILock Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IManagedContext.htm" title="IManagedContext Interface" tocid="T_Hazelcast_Core_IManagedContext">IManagedContext Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMap_2.htm" title="IMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IMap_2">IMap(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMember.htm" title="IMember Interface" tocid="T_Hazelcast_Core_IMember">IMember Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMembershipListener.htm" title="IMembershipListener Interface" tocid="T_Hazelcast_Core_IMembershipListener">IMembershipListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMessageListener_1.htm" title="IMessageListener(T) Interface" tocid="T_Hazelcast_Core_IMessageListener_1">IMessageListener(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMultiExecutionCallback.htm" title="IMultiExecutionCallback Interface" tocid="T_Hazelcast_Core_IMultiExecutionCallback">IMultiExecutionCallback Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMultiMap_2.htm" title="IMultiMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IMultiMap_2">IMultiMap(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_InitialMembershipEvent.htm" title="InitialMembershipEvent Class" tocid="T_Hazelcast_Core_InitialMembershipEvent">InitialMembershipEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_InPredicate.htm" title="InPredicate Class" tocid="T_Hazelcast_Core_InPredicate">InPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_InstanceofPredicate.htm" title="InstanceofPredicate Class" tocid="T_Hazelcast_Core_InstanceofPredicate">InstanceofPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IntegerAverageAggregator.htm" title="IntegerAverageAggregator Class" tocid="T_Hazelcast_Core_IntegerAverageAggregator">IntegerAverageAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IntegerSumAggregator.htm" title="IntegerSumAggregator Class" tocid="T_Hazelcast_Core_IntegerSumAggregator">IntegerSumAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IPartition.htm" title="IPartition Interface" tocid="T_Hazelcast_Core_IPartition">IPartition Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IPartitionAware_1.htm" title="IPartitionAware(T) Interface" tocid="T_Hazelcast_Core_IPartitionAware_1">IPartitionAware(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IPartitioningStrategy.htm" title="IPartitioningStrategy Interface" tocid="T_Hazelcast_Core_IPartitioningStrategy">IPartitioningStrategy Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IPNCounter.htm" title="IPNCounter Interface" tocid="T_Hazelcast_Core_IPNCounter">IPNCounter Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IPredicate.htm" title="IPredicate Interface" tocid="T_Hazelcast_Core_IPredicate">IPredicate Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IPredicate_2.htm" title="IPredicate(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IPredicate_2">IPredicate(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IProjection.htm" title="IProjection Class" tocid="T_Hazelcast_Core_IProjection">IProjection Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IQueue_1.htm" title="IQueue(T) Interface" tocid="T_Hazelcast_Core_IQueue_1">IQueue(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IReplicatedMap_2.htm" title="IReplicatedMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IReplicatedMap_2">IReplicatedMap(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IRingbuffer_1.htm" title="IRingbuffer(T) Interface" tocid="T_Hazelcast_Core_IRingbuffer_1">IRingbuffer(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ISemaphore.htm" title="ISemaphore Interface" tocid="T_Hazelcast_Core_ISemaphore">ISemaphore Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ItemEvent_1.htm" title="ItemEvent(TE) Class" tocid="T_Hazelcast_Core_ItemEvent_1">ItemEvent(TE) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_ItemEventType.htm" title="ItemEventType Enumeration" tocid="T_Hazelcast_Core_ItemEventType">ItemEventType Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ItemListener_1.htm" title="ItemListener(T) Class" tocid="T_Hazelcast_Core_ItemListener_1">ItemListener(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ITopic_1.htm" title="ITopic(T) Interface" tocid="T_Hazelcast_Core_ITopic_1">ITopic(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ITransactionalList_1.htm" title="ITransactionalList(E) Interface" tocid="T_Hazelcast_Core_ITransactionalList_1">ITransactionalList(E) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ITransactionalMap_2.htm" title="ITransactionalMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_ITransactionalMap_2">ITransactionalMap(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ITransactionalMultiMap_2.htm" title="ITransactionalMultiMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_ITransactionalMultiMap_2">ITransactionalMultiMap(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ITransactionalQueue_1.htm" title="ITransactionalQueue(T) Interface" tocid="T_Hazelcast_Core_ITransactionalQueue_1">ITransactionalQueue(T) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ITransactionalSet_1.htm" title="ITransactionalSet(E) Interface" tocid="T_Hazelcast_Core_ITransactionalSet_1">ITransactionalSet(E) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_LifecycleEvent.htm" title="LifecycleEvent Class" tocid="T_Hazelcast_Core_LifecycleEvent">LifecycleEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_LifecycleEvent_LifecycleState.htm" title="LifecycleEvent.LifecycleState Enumeration" tocid="T_Hazelcast_Core_LifecycleEvent_LifecycleState">LifecycleEvent.LifecycleState Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_LifecycleListener.htm" title="LifecycleListener Class" tocid="T_Hazelcast_Core_LifecycleListener">LifecycleListener Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_LikePredicate.htm" title="LikePredicate Class" tocid="T_Hazelcast_Core_LikePredicate">LikePredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_LongAverageAggregator.htm" title="LongAverageAggregator Class" tocid="T_Hazelcast_Core_LongAverageAggregator">LongAverageAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_LongSumAggregator.htm" title="LongSumAggregator Class" tocid="T_Hazelcast_Core_LongSumAggregator">LongSumAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MapClearedListener.htm" title="MapClearedListener Interface" tocid="T_Hazelcast_Core_MapClearedListener">MapClearedListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MapEvent.htm" title="MapEvent Class" tocid="T_Hazelcast_Core_MapEvent">MapEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MapEvictedListener.htm" title="MapEvictedListener Interface" tocid="T_Hazelcast_Core_MapEvictedListener">MapEvictedListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_MapListener.htm" title="MapListener Interface" tocid="T_Hazelcast_Core_MapListener">MapListener Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MaxAggregator_1.htm" title="MaxAggregator(TResult) Class" tocid="T_Hazelcast_Core_MaxAggregator_1">MaxAggregator(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MemberAttributeEvent.htm" title="MemberAttributeEvent Class" tocid="T_Hazelcast_Core_MemberAttributeEvent">MemberAttributeEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MembershipEvent.htm" title="MembershipEvent Class" tocid="T_Hazelcast_Core_MembershipEvent">MembershipEvent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MembershipListener.htm" title="MembershipListener Class" tocid="T_Hazelcast_Core_MembershipListener">MembershipListener Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_Message_1.htm" title="Message(T) Class" tocid="T_Hazelcast_Core_Message_1">Message(T) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_MinAggregator_1.htm" title="MinAggregator(TResult) Class" tocid="T_Hazelcast_Core_MinAggregator_1">MinAggregator(TResult) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_NoDataMemberInClusterException.htm" title="NoDataMemberInClusterException Class" tocid="T_Hazelcast_Core_NoDataMemberInClusterException">NoDataMemberInClusterException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_NotEqualPredicate.htm" title="NotEqualPredicate Class" tocid="T_Hazelcast_Core_NotEqualPredicate">NotEqualPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_NotPredicate.htm" title="NotPredicate Class" tocid="T_Hazelcast_Core_NotPredicate">NotPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_NumberAverageAggregator.htm" title="NumberAverageAggregator Class" tocid="T_Hazelcast_Core_NumberAverageAggregator">NumberAverageAggregator Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_OrPredicate.htm" title="OrPredicate Class" tocid="T_Hazelcast_Core_OrPredicate">OrPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_OverflowPolicy.htm" title="OverflowPolicy Enumeration" tocid="T_Hazelcast_Core_OverflowPolicy">OverflowPolicy Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_PagingPredicate.htm" title="PagingPredicate Class" tocid="T_Hazelcast_Core_PagingPredicate">PagingPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_PartitionPredicate.htm" title="PartitionPredicate Class" tocid="T_Hazelcast_Core_PartitionPredicate">PartitionPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_PredicateExt.htm" title="PredicateExt Class" tocid="T_Hazelcast_Core_PredicateExt">PredicateExt Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_PredicateProperty.htm" title="PredicateProperty Class" tocid="T_Hazelcast_Core_PredicateProperty">PredicateProperty Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_Predicates.htm" title="Predicates Class" tocid="T_Hazelcast_Core_Predicates">Predicates Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_QueryException.htm" title="QueryException Class" tocid="T_Hazelcast_Core_QueryException">QueryException Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_RegexPredicate.htm" title="RegexPredicate Class" tocid="T_Hazelcast_Core_RegexPredicate">RegexPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_SingleAttributeProjection.htm" title="SingleAttributeProjection Class" tocid="T_Hazelcast_Core_SingleAttributeProjection">SingleAttributeProjection Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_SqlPredicate.htm" title="SqlPredicate Class" tocid="T_Hazelcast_Core_SqlPredicate">SqlPredicate Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_StaleSequenceException.htm" title="StaleSequenceException Class" tocid="T_Hazelcast_Core_StaleSequenceException">StaleSequenceException Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/T_Hazelcast_Core_TimeUnit.htm" title="TimeUnit Enumeration" tocid="T_Hazelcast_Core_TimeUnit">TimeUnit Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_TruePredicate.htm" title="TruePredicate Class" tocid="T_Hazelcast_Core_TruePredicate">TruePredicate Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Hazelcast-IMDG-Logo-Orange_Dark_200px.jpg" /></td><td class="titleColumn"><h1>Hazelcast.Core Namespace</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Hazelcast Core</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_AbstractAggregator_1.htm">AbstractAggregator<span id="LST604EE944_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>R<span id="LST604EE944_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Base builtin aggregator
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_AbstractMapEvent.htm">AbstractMapEvent</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_Aggregators.htm">Aggregators</a></td><td><div class="summary">
            A utility class to create basic <a href="T_Hazelcast_Core_IAggregator_1.htm">IAggregator<span id="LST604EE944_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST604EE944_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> instances.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_AndPredicate.htm">AndPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_BetweenPredicate.htm">BetweenPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_BigIntegerSumAggregator.htm">BigIntegerSumAggregator</a></td><td><div class="summary">
            An aggregator that calculates the sum of the input values.
            Does NOT accept null input values.
            Accepts only BigInteger input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_ConsistencyLostException.htm">ConsistencyLostException</a></td><td><div class="summary">
            An exception that is thrown when the session guarantees have been lost
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_CountAggregator.htm">CountAggregator</a></td><td><div class="summary">
            an aggregator that counts the input values. Accepts nulls as input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_DataAwareEntryEvent_2.htm">DataAwareEntryEvent<span id="LST604EE944_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_DistributedObjectDestroyedException.htm">DistributedObjectDestroyedException</a></td><td><div class="summary">
            A
            <a href="T_Hazelcast_Core_HazelcastException.htm">HazelcastException</a>
            that indicates that a
            <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>
            access was attempted, but the object is destroyed.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_DistributedObjectEvent.htm">DistributedObjectEvent</a></td><td><div class="summary">
                DistributedObjectEvent is fired when a
                <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>
                is created or destroyed cluster-wide.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_DistributedObjectEvent_EventType.htm">DistributedObjectEvent<span id="LST604EE944_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>EventType</a></td><td><div class="summary">
            Event types class for event name constants
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_DoubleAverageAggregator.htm">DoubleAverageAggregator</a></td><td><div class="summary">
            an aggregator that calculates the average of the input values.
            Does NOT accept null input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_DoubleSumAggregator.htm">DoubleSumAggregator</a></td><td><div class="summary">
            An aggregator that calculates the sum of the input values extracted from the given attributePath.
            Does NOT accept null input values nor null extracted values.
            Accepts only double input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_EntryAdapter_2.htm">EntryAdapter<span id="LST604EE944_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_EntryEvent_2.htm">EntryEvent<span id="LST604EE944_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_9?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_10?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Map Entry event.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_EqualPredicate.htm">EqualPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_EventObject.htm">EventObject</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_FalsePredicate.htm">FalsePredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_FixedSumAggregator.htm">FixedSumAggregator</a></td><td><div class="summary">
            An aggregator that calculates the sum of the input values extracted from the given attributePath.
            Does NOT accept null input values nor null extracted values.
            Accepts float or double input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_FloatingPointSumAggregator.htm">FloatingPointSumAggregator</a></td><td><div class="summary">
            an aggregator that calculates the sum of the input values.
            Does NOT accept null input values.
            Accepts float or double input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_GreaterLessPredicate.htm">GreaterLessPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_HazelcastException.htm">HazelcastException</a></td><td><div class="summary">
            Base Hazelcast exception.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_HazelcastInstanceNotActiveException.htm">HazelcastInstanceNotActiveException</a></td><td><div class="summary">Thrown when IHazelcastInstance is not active during an invocation.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_HazelcastJsonValue.htm">HazelcastJsonValue</a></td><td><div class="summary">
            HazelcastJsonValue is a wrapper for Json formatted strings. It is
            preferred to store HazelcastJsonValue instead of Strings for Json
            formatted strings. Users can run predicates/aggregations and use
            indexes on the attributes of the underlying Json strings.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_IAggregator_1.htm">IAggregator<span id="LST604EE944_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_11?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST604EE944_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_12?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Simple interface for marking aggregators. An aggregator implementain must support hazelcast serialization and
            have a counterpart on server side.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_ILikePredicate.htm">ILikePredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_InitialMembershipEvent.htm">InitialMembershipEvent</a></td><td><div class="summary">
                A event that is send when a
                <a href="T_Hazelcast_Core_IInitialMembershipListener.htm">IInitialMembershipListener</a>
                registers itself on a
                <a href="T_Hazelcast_Core_ICluster.htm">ICluster</a>
                . For more
                information see the
                <a href="T_Hazelcast_Core_IInitialMembershipListener.htm">IInitialMembershipListener</a>
                .
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_InPredicate.htm">InPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_InstanceofPredicate.htm">InstanceofPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_IntegerAverageAggregator.htm">IntegerAverageAggregator</a></td><td><div class="summary">
            an aggregator that calculates the average of the input values extracted from the given attributePath.
            Does NOT accept null input values nor null extracted values.
            Accepts only int input values
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_IntegerSumAggregator.htm">IntegerSumAggregator</a></td><td><div class="summary">
            an aggregator that calculates the sum of the input values.
            Does NOT accept null input values.
            Accepts only int input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_IProjection.htm">IProjection</a></td><td><div class="summary">
            Marker interface for server side projection implementation.
            Enables transforming object into other objects.
            Only 1:1 transformations allowed. Use an Aggregator to perform N:1 or N:M aggregations.
            <br />
            Projection implementations must be hazelcast serializable and must have a counterpart/implementation on server side.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_ItemEvent_1.htm">ItemEvent<span id="LST604EE944_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_13?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TE<span id="LST604EE944_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_14?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Map Item event.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_ItemListener_1.htm">ItemListener<span id="LST604EE944_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_15?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_16?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_LifecycleEvent.htm">LifecycleEvent</a></td><td><div class="summary">Lifecycle event fired when IHazelcastInstance's state changes.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_LifecycleListener.htm">LifecycleListener</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_LikePredicate.htm">LikePredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_LongAverageAggregator.htm">LongAverageAggregator</a></td><td><div class="summary">
            an aggregator that calculates the average of the input values.
            Does NOT accept null input values.
            Accepts only long input values
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_LongSumAggregator.htm">LongSumAggregator</a></td><td><div class="summary">
            an aggregator that calculates the sum of the input values.
            Does NOT accept null input values.
            Accepts only long input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_MapEvent.htm">MapEvent</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_MaxAggregator_1.htm">MaxAggregator<span id="LST604EE944_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_17?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST604EE944_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_18?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            an aggregator that calculates the max of the input values.
            Accepts null input values
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_MemberAttributeEvent.htm">MemberAttributeEvent</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_MembershipEvent.htm">MembershipEvent</a></td><td><div class="summary">
                Membership event fired when a new member is added
                to the cluster and/or when a member leaves the cluster.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_MembershipListener.htm">MembershipListener</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_Message_1.htm">Message<span id="LST604EE944_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_19?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_20?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Message for <a href="T_Hazelcast_Core_ITopic_1.htm">ITopic&lt;E&gt;</a>.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_MinAggregator_1.htm">MinAggregator<span id="LST604EE944_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_21?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TResult<span id="LST604EE944_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_22?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            an aggregator that calculates the min of the input values.
            Accepts null input values
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_NoDataMemberInClusterException.htm">NoDataMemberInClusterException</a></td><td><div class="summary">Thrown when invoke operations on a CRDT failed because the cluster does not contain any data members.</div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_NotEqualPredicate.htm">NotEqualPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_NotPredicate.htm">NotPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_NumberAverageAggregator.htm">NumberAverageAggregator</a></td><td><div class="summary">
            an aggregator that calculates the average of the input values.
            Does NOT accept null input values nor null extracted values.
            Accepts float or double input values.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_OrPredicate.htm">OrPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="T_Hazelcast_Core_PagingPredicate.htm">PagingPredicate</a></td><td><div class="summary">
             This class is a special Predicate which helps to get a page-by-page result of a query.
             It can be constructed with a page-size, an inner predicate for filtering, and a comparator for sorting.
             </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_PartitionPredicate.htm">PartitionPredicate</a></td><td><div class="summary">
            A builtin predicate that restricts the execution of a target Predicate to a single Partition.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_PredicateExt.htm">PredicateExt</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_PredicateProperty.htm">PredicateProperty</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_Predicates.htm">Predicates</a></td><td><div class="summary">
                Helper mothod for creating builtin predicates
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_QueryException.htm">QueryException</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_RegexPredicate.htm">RegexPredicate</a></td><td /></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_SingleAttributeProjection.htm">SingleAttributeProjection</a></td><td><div class="summary">
            Projection that extracts the values of the given attribute and returns it.<br />
            The attributePath does not support the [any] operator.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_SqlPredicate.htm">SqlPredicate</a></td><td><div class="summary">
                SQL Predicate
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_StaleSequenceException.htm">StaleSequenceException</a></td><td><div class="summary">
            An exception that is thrown when accessing an item in the <a href="T_Hazelcast_Core_IRingbuffer_1.htm">IRingbuffer</a> using a 
            sequence that is smaller than the current head sequence. This means that the and old item is read, 
            but it isn't available anymore in the ringbuffer.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_Hazelcast_Core_TruePredicate.htm">TruePredicate</a></td><td /></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Interfaces</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="interfaceList"><tr><th class="iconColumn">
					 
				</th><th>Interface</th><th>Description</th></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_EntryAddedListener_2.htm">EntryAddedListener<span id="LST604EE944_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_23?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_24?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Invoked when an entry is added.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_EntryEvictedListener_2.htm">EntryEvictedListener<span id="LST604EE944_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_25?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_26?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Invoked when an entry is evicted.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_EntryExpiredListener_2.htm">EntryExpiredListener<span id="LST604EE944_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_27?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_28?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Listener which is notified after removal of an entry due to the expiration-based-eviction.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_EntryMergedListener_2.htm">EntryMergedListener<span id="LST604EE944_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_29?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_30?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Invoked after WAN replicated entry is merged.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_EntryRemovedListener_2.htm">EntryRemovedListener<span id="LST604EE944_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_31?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_32?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Invoked when an entry is removed.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_EntryUpdatedListener_2.htm">EntryUpdatedListener<span id="LST604EE944_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_33?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_34?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Invoked when an entry is updated.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IAtomicLong.htm">IAtomicLong</a></td><td><div class="summary">
                IAtomicLong is a redundant and highly available distributed Atomic Long
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IClient.htm">IClient</a></td><td><div class="summary">
                IClient interface allows to get information about
                a connected clients socket address, type and uuid.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IClientListener.htm">IClientListener</a></td><td><div class="summary">
                IClientListener allows to get notified when a
                <a href="T_Hazelcast_Core_IClient.htm">IClient</a>
                is connected to
                or disconnected from cluster.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IClientService.htm">IClientService</a></td><td><div class="summary">
                IClientService allows to query connected
                <a href="T_Hazelcast_Core_IClient.htm">IClient</a>
                s and
                attach/detach
                <a href="T_Hazelcast_Core_IClientListener.htm">IClientListener</a>
                s to listen connection events.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ICluster.htm">ICluster</a></td><td><div class="summary">Hazelcast cluster interface.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ICountDownLatch.htm">ICountDownLatch</a></td><td><div class="summary">
                ICountDownLatch is a backed-up distributed alternative to the
                .
                <p />
                ICountDownLatch is a cluster-wide synchronization aid
                that allows one or more threads to wait until a set of operations being
                performed in other threads completes.
                <p />
                There are a few differences compared to the
                <a href="T_Hazelcast_Core_ICountDownLatch.htm">ICountDownLatch</a>
                :
                <ol><li>
                        the ICountDownLatch count can be re-set using
                        <a href="M_Hazelcast_Core_ICountDownLatch_TrySetCount.htm">TrySetCount(int)</a>
                        after a countdown
                        has finished but not during an active count. This allows the same latch instance to be reused.
                    </li><li>
                        there is no await() method to do an unbound wait since this is undesirable in a distributed
                        application: it can happen that for example a cluster is split or that the master and
                        replica's all die. So in most cases it is best to configure an explicit timeout so have the ability
                        to deal with these situations.
                    </li></ol></div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a></td><td><div class="summary">Base interface for all distributed objects.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IDistributedObjectListener.htm">IDistributedObjectListener</a></td><td><div class="summary">
                IDistributedObjectListener allows to get notified when a
                <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>
                is created or destroyed cluster-wide.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IEndpoint.htm">IEndpoint</a></td><td><div class="summary">Endpoint represents a peer in the cluster.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IEntryListener_2.htm">IEntryListener<span id="LST604EE944_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_35?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_36?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Map Entry listener to get notified when a map entry
                is added, removed, updated or evicted.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IEntryView_2.htm">IEntryView<span id="LST604EE944_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_37?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_38?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">IEntryView represents a readonly view of a map entry.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IEventListener.htm">IEventListener</a></td><td /></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IExecutionCallback_1.htm">IExecutionCallback<span id="LST604EE944_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_39?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_40?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                IExecutionCallback allows to asynchronously get notified when the execution is completed,
                either successfully or with error.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IExecutorService.htm">IExecutorService</a></td><td><div class="summary">
                Distributed implementation of ExecutorService.
                IExecutorService provides additional methods like executing tasks
                on a specific member, on a member who is owner of a specific key,
                executing a tasks on multiple members and listening execution result using a callback.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IHazelcastInstance.htm">IHazelcastInstance</a></td><td><div class="summary">Hazelcast instance.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IHazelcastInstanceAware.htm">IHazelcastInstanceAware</a></td><td><div class="summary">Used to get IHazelcastInstance reference when submitting a Runnable/Callable using Hazelcast ExecutorService.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IHCollection_1.htm">IHCollection<span id="LST604EE944_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_41?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_42?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Concurrent, distributed, partitioned, listenable collection.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IHList_1.htm">IHList<span id="LST604EE944_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_43?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_44?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Concurrent, distributed implementation of <span class="nolink">IList<span id="LST604EE944_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_45?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_46?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span>IList 
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IHSet_1.htm">IHSet<span id="LST604EE944_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_47?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_48?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Concurrent, distributed implementation of ISet
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IIdGenerator.htm">IIdGenerator</a></td><td><div class="summary">Cluster-wide unique id generator.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IInitialMembershipListener.htm">IInitialMembershipListener</a></td><td><div class="summary">
                The InitializingMembershipListener is a
                <a href="T_Hazelcast_Core_IMembershipListener.htm">IMembershipListener</a>
                that will first receives a
                <a href="T_Hazelcast_Core_InitialMembershipEvent.htm">InitialMembershipEvent</a>
                when it is registered so it immediately knows which members are available. After
                that event has been received, it will receive the normal MembershipEvents.
                When the InitializingMembershipListener already is registered on a
                <a href="T_Hazelcast_Core_ICluster.htm">ICluster</a>
                and is registered again on the same
                ICluster instance, it will not receive an additional MembershipInitializeEvent. So this is a once only event.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IItemListener_1.htm">IItemListener<span id="LST604EE944_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_49?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TE<span id="LST604EE944_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_50?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Item listener for
                <a href="T_Hazelcast_Core_IQueue_1.htm">IQueue<span id="LST604EE944_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_51?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_52?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
                ,
                <a href="T_Hazelcast_Core_IHSet_1.htm">IHSet<span id="LST604EE944_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_53?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_54?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
                and
                <a href="T_Hazelcast_Core_IHList_1.htm">IHList<span id="LST604EE944_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_55?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_56?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ILifecycleListener.htm">ILifecycleListener</a></td><td><div class="summary">Listener object for lisntening lifecycle events of hazelcast instance</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ILifecycleService.htm">ILifecycleService</a></td><td><div class="summary">
                ILifecycleService allows you to shutdown, terminate and listen to
                <a href="T_Hazelcast_Core_LifecycleEvent.htm">LifecycleEvent</a>
                's
                on IHazelcastInstance.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ILock.htm">ILock</a></td><td><div class="summary">
                Distributed implementation of Lock
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IManagedContext.htm">IManagedContext</a></td><td><div class="summary">Container managed context, such as Spring, Guice and etc.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IMap_2.htm">IMap<span id="LST604EE944_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_57?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_58?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Concurrent, distributed, observable and queryable map.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IMember.htm">IMember</a></td><td><div class="summary">Cluster member interface.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IMembershipListener.htm">IMembershipListener</a></td><td><div class="summary">ICluster membership listener.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IMessageListener_1.htm">IMessageListener<span id="LST604EE944_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_59?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_60?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Message listener for
                <a href="T_Hazelcast_Core_ITopic_1.htm">ITopic&lt;E&gt;</a>
                .
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IMultiExecutionCallback.htm">IMultiExecutionCallback</a></td><td><div class="summary">
                IMultiExecutionCallback allows to get notified when an execution is completed on each member
                which task is submitted to.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IMultiMap_2.htm">IMultiMap<span id="LST604EE944_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_61?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_62?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">A specialized Concurrent, distributed map whose keys can be associated with multiple values.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IPartition.htm">IPartition</a></td><td><div class="summary">Virtual partition instance.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IPartitionAware_1.htm">IPartitionAware<span id="LST604EE944_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_63?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_64?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                IPartitionAware allows implementing keys to be located on the same member
                or implementing tasks to be executed on
                <a href="M_Hazelcast_Core_IPartitionAware_1_GetPartitionKey.htm">IPartitionAware&lt;T&gt;.GetPartitionKey()</a>
                's owner member.
                This makes related data to be stored in the same location. (See data-affinity.)
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IPartitioningStrategy.htm">IPartitioningStrategy</a></td><td><div class="summary">
                IPartitioningStrategy allows keys to be located on the same member
                This makes related data to be stored in the same location.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IPNCounter.htm">IPNCounter</a></td><td><div class="summary">
             PN (Positive-Negative) CRDT counter.
             </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IPredicate.htm">IPredicate</a></td><td /></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IPredicate_2.htm">IPredicate<span id="LST604EE944_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_65?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_66?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td> <strong>Obsolete. </strong></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IQueue_1.htm">IQueue<span id="LST604EE944_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_67?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_68?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Concurrent, blocking, distributed, observable queue.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IReplicatedMap_2.htm">IReplicatedMap<span id="LST604EE944_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_69?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_70?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            A ReplicatedMap is a map-like data structure with weak consistency and values locally stored on every node of the cluster. 
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_IRingbuffer_1.htm">IRingbuffer<span id="LST604EE944_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_71?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_72?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">A Ringbuffer is a data-structure where the content is stored in a ring like structure.</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ISemaphore.htm">ISemaphore</a></td><td><div class="summary">
                ISemaphore is a backed-up distributed alternative to the
                <span class="nolink">System.Threading.Semaphore</span>
                .
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ITopic_1.htm">ITopic<span id="LST604EE944_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_73?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_74?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Hazelcast provides distribution mechanism for publishing messages that are delivered to multiple subscribers
                which is also known as publish/subscribe (pub/sub) messaging model.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ITransactionalList_1.htm">ITransactionalList<span id="LST604EE944_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_75?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>E<span id="LST604EE944_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_76?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Transactional implementation of <a href="T_Hazelcast_Core_IHList_1.htm">IHList&lt;E&gt;</a></div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ITransactionalMap_2.htm">ITransactionalMap<span id="LST604EE944_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_77?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_78?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
            Transactional implementation of Map
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ITransactionalMultiMap_2.htm">ITransactionalMultiMap<span id="LST604EE944_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_79?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST604EE944_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_80?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Transactional implementation of MultiMap</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ITransactionalQueue_1.htm">ITransactionalQueue<span id="LST604EE944_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_81?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST604EE944_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_82?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Transactional implementation of Queue</div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_ITransactionalSet_1.htm">ITransactionalSet<span id="LST604EE944_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_83?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>E<span id="LST604EE944_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_84?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
                Transactional implementation of
                <a href="T_Hazelcast_Core_IHSet_1.htm">IHSet&lt;E&gt;</a>
                .
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_MapClearedListener.htm">MapClearedListener</a></td><td><div class="summary">
            Invoked when all entries are removed.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_MapEvictedListener.htm">MapEvictedListener</a></td><td><div class="summary">
            Invoked when all entries are evicted.
            </div></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" alt="Public interface" title="Public interface" /></td><td><a href="T_Hazelcast_Core_MapListener.htm">MapListener</a></td><td><div class="summary">
            A marker interface which is used to get notified upon a map or an entry event.
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Hazelcast_Core_ClientType.htm">ClientType</a></td><td><div class="summary">Type of a client.</div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Hazelcast_Core_EntryEventType.htm">EntryEventType</a></td><td><div class="summary">Type of entry event.</div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Hazelcast_Core_ItemEventType.htm">ItemEventType</a></td><td><div class="summary">Type of item event.</div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Hazelcast_Core_LifecycleEvent_LifecycleState.htm">LifecycleEvent<span id="LST604EE944_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST604EE944_85?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LifecycleState</a></td><td><div class="summary">lifecycle states</div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Hazelcast_Core_OverflowPolicy.htm">OverflowPolicy</a></td><td><div class="summary">
            Using this policy one can control the behavior what should to be done when an item is about to be added to the ringbuffer,
            but there is 0 remaining capacity.
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_Hazelcast_Core_TimeUnit.htm">TimeUnit</a></td><td><div class="summary">
            Represent Time units
            </div></td></tr></table></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.</p> </div></body></html>