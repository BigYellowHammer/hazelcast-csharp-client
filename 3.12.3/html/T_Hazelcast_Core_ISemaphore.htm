<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ISemaphore Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ISemaphore interface" /><meta name="System.Keywords" content="Hazelcast.Core.ISemaphore interface" /><meta name="Microsoft.Help.F1" content="Hazelcast.Core.ISemaphore" /><meta name="Microsoft.Help.Id" content="T:Hazelcast.Core.ISemaphore" /><meta name="Description" content="ISemaphore is a backed-up distributed alternative to the System.Threading.Semaphore ." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Hazelcast.Core" /><meta name="file" content="T_Hazelcast_Core_ISemaphore" /><meta name="guid" content="T_Hazelcast_Core_ISemaphore" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Hazelcast .Net Client Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\G_Hazelcast_Client.htm" title="Hazelcast .Net Client Class Library" tocid="roottoc">Hazelcast .Net Client Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Hazelcast_Core.htm" title="Hazelcast.Core" tocid="N_Hazelcast_Core">Hazelcast.Core</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_ISemaphore.htm" title="ISemaphore Interface" tocid="T_Hazelcast_Core_ISemaphore">ISemaphore Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Hazelcast_Core_ISemaphore.htm" title="ISemaphore Methods" tocid="Methods_T_Hazelcast_Core_ISemaphore">ISemaphore Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Hazelcast-IMDG-Logo-Orange_Dark_200px.jpg" /></td><td class="titleColumn"><h1>ISemaphore Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
                ISemaphore is a backed-up distributed alternative to the
                <span class="nolink">System.Threading.Semaphore</span>
                .
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Hazelcast_Core.htm">Hazelcast.Core</a><br />
    <strong>Assembly:</strong>
   Hazelcast.Net (in Hazelcast.Net.dll) Version: 3.12.3<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">ISemaphore</span> : <span class="identifier">IDistributedObject</span></pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">ISemaphore</span>
	<span class="keyword">Inherits</span> <span class="identifier">IDistributedObject</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">ISemaphore</span> : <span class="identifier">IDistributedObject</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">ISemaphore</span> =  
    <span class="keyword">interface</span>
        <span class="keyword">interface</span> <span class="identifier">IDistributedObject</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script></div><p>The <span class="selflink">ISemaphore</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_Acquire.htm">Acquire<span id="LST122FCA2_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST122FCA2_0?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
                    Acquires a permit, if one is available and returns immediately,
                    reducing the number of available permits by one.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_Acquire_1.htm">Acquire(Int32)</a></td><td><div class="summary">
                    Acquires the given number of permits, if they are available,
                    and returns immediately, reducing the number of available permits
                    by the given amount.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_AvailablePermits.htm">AvailablePermits</a></td><td><div class="summary">Returns the current number of permits currently available in this semaphore.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_Destroy.htm">Destroy</a></td><td><div class="summary">Destroys this object cluster-wide.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_DrainPermits.htm">DrainPermits</a></td><td><div class="summary">Acquires and returns all permits that are immediately available.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetName.htm">GetName</a></td><td><div class="summary">Returns the unique name for this IDistributedObject.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetPartitionKey.htm">GetPartitionKey</a></td><td><div class="summary">Returns the key of partition this IDistributedObject is assigned to.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetServiceName.htm">GetServiceName</a></td><td><div class="summary">Returns the service name for this object.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_Init.htm">Init</a></td><td><div class="summary">Try to initialize this ISemaphore instance with given permit count</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_ReducePermits.htm">ReducePermits</a></td><td><div class="summary">
                Shrinks the number of available permits by the indicated
                reduction.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_Release.htm">Release<span id="LST122FCA2_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST122FCA2_1?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
                Releases a permit, increasing the number of available permits by
                one.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_Release_1.htm">Release(Int32)</a></td><td><div class="summary">
                Releases the given number of permits, increasing the number of
                available permits by that amount.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_TryAcquire.htm">TryAcquire<span id="LST122FCA2_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST122FCA2_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
                Acquires a permit, if one is available and returns immediately,
                with the value  <span class="code">true</span>, reducing the number of available permits by one.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_TryAcquire_1.htm">TryAcquire(Int32)</a></td><td><div class="summary">
                Acquires the given number of permits, if they are available, and
                returns immediately, with the value <span class="code">true</span>,
                reducing the number of available permits by the given amount.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_TryAcquire_3.htm">TryAcquire(Int64, TimeUnit)</a></td><td><div class="summary">
                Acquires a permit from this semaphore, if one becomes available
                within the given waiting time and the current thread has not
                been <span class="nolink">interrupted</span>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_ISemaphore_TryAcquire_2.htm">TryAcquire(Int32, Int64, TimeUnit)</a></td><td><div class="summary">
                Acquires the given number of permits, if they are available and
                returns immediately, with the value
                <span class="code">true</span>
                ,
                reducing the number of available permits by the given amount.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p />
                ISemaphore is a cluster-wide counting semaphore.  Conceptually,
                it maintains a set of permits.  Each
                <a href="M_Hazelcast_Core_ISemaphore_Acquire.htm">Acquire()</a>
                blocks if necessary until
                a permit is available, and then takes it.  Each
                <a href="M_Hazelcast_Core_ISemaphore_Release.htm">Release()</a>
                adds a permit,
                potentially releasing a blocking acquirer. However, no actual permit objects are
                used; the semaphore just keeps a count of the number available and acts accordingly.
                <p />The Hazelcast distributed semaphore implementation guarantees that
                threads invoking any of the
                <a href="M_Hazelcast_Core_ISemaphore_Acquire.htm">acquire</a>
                methods are selected
                to obtain permits in the order in which their invocation of those methods
                was processed(first-in-first-out; FIFO).  Note that FIFO ordering necessarily
                applies to specific internal points of execution within the cluster.  So,
                it is possible for one member to invoke
                <span class="code">acquire</span>
                before another, but reach
                the ordering point after the other, and similarly upon return from the method.
                <p />This class also provides convenience methods to
                <a href="M_Hazelcast_Core_ISemaphore_Acquire_1.htm">acquire</a>
                and
                <a href="M_Hazelcast_Core_ISemaphore_Release_1.htm">release</a>
                multiple
                permits at a time.  Beware of the increased risk of indefinite
                postponement when using the multiple acquire.  If a single permit is
                released to a semaphore that is currently blocking, a thread waiting
                for one permit will acquire it before a thread waiting for multiple
                permits regardless of the call order.
                <p /><ul><li>Correct usage of a semaphore is established by programming convention in the application.</li></ul></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Hazelcast_Core.htm">Hazelcast.Core Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.</p> </div></body></html>