<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IMap(TKey, TValue) Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IMap%3CTKey%2C TValue%3E interface, methods" /><meta name="System.Keywords" content="IMap(Of TKey%2C TValue) interface, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Hazelcast.Core.IMap`2" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Hazelcast.Core" /><meta name="file" content="Methods_T_Hazelcast_Core_IMap_2" /><meta name="guid" content="Methods_T_Hazelcast_Core_IMap_2" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Hazelcast .Net Client Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\G_Hazelcast_Client.htm" title="Hazelcast .Net Client Class Library" tocid="roottoc">Hazelcast .Net Client Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Hazelcast_Core.htm" title="Hazelcast.Core" tocid="N_Hazelcast_Core">Hazelcast.Core</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMap_2.htm" title="IMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IMap_2">IMap(TKey, TValue) Interface</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Hazelcast_Core_IMap_2.htm" title="IMap(TKey, TValue) Methods" tocid="Methods_T_Hazelcast_Core_IMap_2">IMap(TKey, TValue) Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_AddEntryListener.htm" title="AddEntryListener Method " tocid="Overload_Hazelcast_Core_IMap_2_AddEntryListener">AddEntryListener Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_AddIndex.htm" title="AddIndex Method " tocid="M_Hazelcast_Core_IMap_2_AddIndex">AddIndex Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_AddInterceptor.htm" title="AddInterceptor Method " tocid="M_Hazelcast_Core_IMap_2_AddInterceptor">AddInterceptor Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Aggregate.htm" title="Aggregate Method " tocid="Overload_Hazelcast_Core_IMap_2_Aggregate">Aggregate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Clear.htm" title="Clear Method " tocid="M_Hazelcast_Core_IMap_2_Clear">Clear Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_ContainsKey.htm" title="ContainsKey Method " tocid="M_Hazelcast_Core_IMap_2_ContainsKey">ContainsKey Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_ContainsValue.htm" title="ContainsValue Method " tocid="M_Hazelcast_Core_IMap_2_ContainsValue">ContainsValue Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Delete.htm" title="Delete Method " tocid="M_Hazelcast_Core_IMap_2_Delete">Delete Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_EntrySet.htm" title="EntrySet Method " tocid="Overload_Hazelcast_Core_IMap_2_EntrySet">EntrySet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Evict.htm" title="Evict Method " tocid="M_Hazelcast_Core_IMap_2_Evict">Evict Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_EvictAll.htm" title="EvictAll Method " tocid="M_Hazelcast_Core_IMap_2_EvictAll">EvictAll Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_ExecuteOnEntries.htm" title="ExecuteOnEntries Method " tocid="Overload_Hazelcast_Core_IMap_2_ExecuteOnEntries">ExecuteOnEntries Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_ExecuteOnKey.htm" title="ExecuteOnKey Method " tocid="M_Hazelcast_Core_IMap_2_ExecuteOnKey">ExecuteOnKey Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_ExecuteOnKeys.htm" title="ExecuteOnKeys Method " tocid="M_Hazelcast_Core_IMap_2_ExecuteOnKeys">ExecuteOnKeys Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Flush.htm" title="Flush Method " tocid="M_Hazelcast_Core_IMap_2_Flush">Flush Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_ForceUnlock.htm" title="ForceUnlock Method " tocid="M_Hazelcast_Core_IMap_2_ForceUnlock">ForceUnlock Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Get.htm" title="Get Method " tocid="M_Hazelcast_Core_IMap_2_Get">Get Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_GetAll.htm" title="GetAll Method " tocid="M_Hazelcast_Core_IMap_2_GetAll">GetAll Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_GetAsync.htm" title="GetAsync Method " tocid="M_Hazelcast_Core_IMap_2_GetAsync">GetAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_GetEntryView.htm" title="GetEntryView Method " tocid="M_Hazelcast_Core_IMap_2_GetEntryView">GetEntryView Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_IsEmpty.htm" title="IsEmpty Method " tocid="M_Hazelcast_Core_IMap_2_IsEmpty">IsEmpty Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_IsLocked.htm" title="IsLocked Method " tocid="M_Hazelcast_Core_IMap_2_IsLocked">IsLocked Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_KeySet.htm" title="KeySet Method " tocid="Overload_Hazelcast_Core_IMap_2_KeySet">KeySet Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Lock.htm" title="Lock Method " tocid="Overload_Hazelcast_Core_IMap_2_Lock">Lock Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Project.htm" title="Project Method " tocid="Overload_Hazelcast_Core_IMap_2_Project">Project Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Put.htm" title="Put Method " tocid="Overload_Hazelcast_Core_IMap_2_Put">Put Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_PutAll.htm" title="PutAll Method " tocid="M_Hazelcast_Core_IMap_2_PutAll">PutAll Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_PutAsync.htm" title="PutAsync Method " tocid="Overload_Hazelcast_Core_IMap_2_PutAsync">PutAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_PutIfAbsent.htm" title="PutIfAbsent Method " tocid="Overload_Hazelcast_Core_IMap_2_PutIfAbsent">PutIfAbsent Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_PutTransient.htm" title="PutTransient Method " tocid="M_Hazelcast_Core_IMap_2_PutTransient">PutTransient Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Remove.htm" title="Remove Method " tocid="Overload_Hazelcast_Core_IMap_2_Remove">Remove Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_RemoveAll.htm" title="RemoveAll Method " tocid="M_Hazelcast_Core_IMap_2_RemoveAll">RemoveAll Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_RemoveAsync.htm" title="RemoveAsync Method " tocid="M_Hazelcast_Core_IMap_2_RemoveAsync">RemoveAsync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_RemoveEntryListener.htm" title="RemoveEntryListener Method " tocid="M_Hazelcast_Core_IMap_2_RemoveEntryListener">RemoveEntryListener Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_RemoveInterceptor.htm" title="RemoveInterceptor Method " tocid="M_Hazelcast_Core_IMap_2_RemoveInterceptor">RemoveInterceptor Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Replace.htm" title="Replace Method " tocid="Overload_Hazelcast_Core_IMap_2_Replace">Replace Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Set.htm" title="Set Method " tocid="Overload_Hazelcast_Core_IMap_2_Set">Set Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Size.htm" title="Size Method " tocid="M_Hazelcast_Core_IMap_2_Size">Size Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_SubmitToKey.htm" title="SubmitToKey Method " tocid="M_Hazelcast_Core_IMap_2_SubmitToKey">SubmitToKey Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_TryLock.htm" title="TryLock Method " tocid="Overload_Hazelcast_Core_IMap_2_TryLock">TryLock Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_TryPut.htm" title="TryPut Method " tocid="M_Hazelcast_Core_IMap_2_TryPut">TryPut Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_TryRemove.htm" title="TryRemove Method " tocid="M_Hazelcast_Core_IMap_2_TryRemove">TryRemove Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Hazelcast_Core_IMap_2_Unlock.htm" title="Unlock Method " tocid="M_Hazelcast_Core_IMap_2_Unlock">Unlock Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Hazelcast_Core_IMap_2_Values.htm" title="Values Method " tocid="Overload_Hazelcast_Core_IMap_2_Values">Values Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Hazelcast-IMDG-Logo-Orange_Dark_200px.jpg" /></td><td class="titleColumn"><h1>IMap<span id="LST519516C9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TKey</span>, <span class="typeparameter">TValue</span><span id="LST519516C9_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Methods</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="T_Hazelcast_Core_IMap_2.htm">IMap<span id="LST519516C9_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST519516C9_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> generic type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_2.htm">AddEntryListener(IEntryListener<span id="LST519516C9_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST519516C9_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">
                Adds an entry listener for this map.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_6.htm">AddEntryListener(MapListener, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for this map.To receive an event, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener.htm">AddEntryListener(IEntryListener<span id="LST519516C9_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST519516C9_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IPredicate, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">Adds an continuous entry listener for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_3.htm">AddEntryListener(IEntryListener<span id="LST519516C9_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST519516C9_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, TKey, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">Adds the specified entry listener for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_4.htm">AddEntryListener(MapListener, IPredicate, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for this map.To receive an event, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_7.htm">AddEntryListener(MapListener, TKey, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for the specified key, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_1.htm">AddEntryListener(IEntryListener<span id="LST519516C9_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST519516C9_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IPredicate, TKey, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">Adds an continuous entry listener for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_5.htm">AddEntryListener(MapListener, IPredicate, TKey, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for the specified key, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddIndex.htm">AddIndex</a></td><td><div class="summary">
                Adds an index to this map for the specified entries so
                that queries can run faster.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddInterceptor.htm">AddInterceptor</a></td><td><div class="summary">Adds an interceptor for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Aggregate__1.htm">Aggregate<span id="LST519516C9_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST519516C9_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IAggregator<span id="LST519516C9_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST519516C9_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Applies the aggregation logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Aggregate__1_1.htm">Aggregate<span id="LST519516C9_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST519516C9_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IAggregator<span id="LST519516C9_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST519516C9_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IPredicate)</a></td><td><div class="summary">
            Applies the aggregation logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Clear.htm">Clear</a></td><td><div class="summary">
                Removes all of the mappings from this map (optional operation).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ContainsKey.htm">ContainsKey</a></td><td><div class="summary">
                Determines whether this map contains an entry for the specified key.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ContainsValue.htm">ContainsValue</a></td><td><div class="summary">
                Determines whether this map contains one or more keys to the specified value
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Delete.htm">Delete</a></td><td><div class="summary">
                Removes the mapping for a key from this map if it is present
                (optional operation).
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_Destroy.htm">Destroy</a></td><td><div class="summary">Destroys this object cluster-wide.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_EntrySet.htm">EntrySet<span id="LST519516C9_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_20?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
                Returns a
                <span class="nolink">ISet<span id="LST519516C9_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_21?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST519516C9_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_22?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span>
                clone of the mappings contained in this map.
                The set is <b>NOT</b> backed by the map,
                so changes to the map are <b>NOT</b> reflected in the set, and vice-versa.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_EntrySet_1.htm">EntrySet(IPredicate)</a></td><td><div class="summary">
                Queries the map based on the specified predicate and
                returns the matching entries.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Evict.htm">Evict</a></td><td><div class="summary">Evicts the specified key from this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_EvictAll.htm">EvictAll</a></td><td><div class="summary">Evicts all keys from this map except the locked ones.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnEntries.htm">ExecuteOnEntries(IEntryProcessor)</a></td><td><div class="summary">Applies the user defined EntryProcessor to the all entries in the map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnEntries_1.htm">ExecuteOnEntries(IEntryProcessor, IPredicate)</a></td><td><div class="summary">
                Applies the user defined EntryProcessor to the entries in the map which satisfies provided predicate.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnKey.htm">ExecuteOnKey</a></td><td><div class="summary">Applies the user defined EntryProcessor to the entry mapped by the key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnKeys.htm">ExecuteOnKeys</a></td><td><div class="summary">Applies the user defined EntryProcessor to the entries mapped by the collection of keys.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Flush.htm">Flush</a></td><td><div class="summary">
                If this map has a MapStore this method flushes
                all the local dirty entries by calling <span class="code">MapStore.storeAll()</span> and/or <span class="code">MapStore.deleteAll()</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ForceUnlock.htm">ForceUnlock</a></td><td><div class="summary">Releases the lock for the specified key regardless of the lock owner.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Get.htm">Get</a></td><td><div class="summary">
                Returns the value for the specified key, or <span class="code">null</span> if this map does not contain this key.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_GetAll.htm">GetAll</a></td><td><div class="summary">Returns the entries for the given keys.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_GetAsync.htm">GetAsync</a></td><td><div class="summary">Asynchronously gets the given key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_GetEntryView.htm">GetEntryView</a></td><td><div class="summary">Returns the <span class="code">EntryView</span> for the specified key.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetName.htm">GetName</a></td><td><div class="summary">Returns the unique name for this IDistributedObject.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetPartitionKey.htm">GetPartitionKey</a></td><td><div class="summary">Returns the key of partition this IDistributedObject is assigned to.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetServiceName.htm">GetServiceName</a></td><td><div class="summary">Returns the service name for this object.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_IsEmpty.htm">IsEmpty</a></td><td><div class="summary">Returns <span class="code">true</span> if this map contains no entries.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_IsLocked.htm">IsLocked</a></td><td><div class="summary">Checks the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_KeySet.htm">KeySet<span id="LST519516C9_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_23?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Returns a set clone of the keys contained in this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_KeySet_1.htm">KeySet(IPredicate)</a></td><td><div class="summary">
                Queries the map based on the specified predicate and
                returns the keys of matching entries.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Lock.htm">Lock(TKey)</a></td><td><div class="summary">Acquires the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Lock_1.htm">Lock(TKey, Int64, TimeUnit)</a></td><td><div class="summary">Acquires the lock for the specified key for the specified lease time.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Project__1.htm">Project<span id="LST519516C9_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_24?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST519516C9_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IProjection)</a></td><td><div class="summary">
            Applies the projection logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Project__1_1.htm">Project<span id="LST519516C9_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST519516C9_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IProjection, IPredicate)</a></td><td><div class="summary">
            Applies the projection logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Put.htm">Put(TKey, TValue)</a></td><td><div class="summary">
                Associates the specified value with the specified key in this map
                If the map previously contained a mapping for
                the key, the old value is replaced by the specified value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Put_1.htm">Put(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">Puts an entry into this map with a given ttl (time to live) value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutAll.htm">PutAll</a></td><td><div class="summary">
                Copies all of the mappings from the specified map to this map
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutAsync.htm">PutAsync(TKey, TValue)</a></td><td><div class="summary">Asynchronously puts the given key and value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutAsync_1.htm">PutAsync(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">Asynchronously puts the given key and value into this map with a given ttl (time to live) value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutIfAbsent.htm">PutIfAbsent(TKey, TValue)</a></td><td><div class="summary">
                If the specified key is not already associated
                with a value, associate it with the given value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutIfAbsent_1.htm">PutIfAbsent(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">
                Puts an entry into this map with a given ttl (time to live) value
                if the specified key is not already associated with a value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutTransient.htm">PutTransient</a></td><td><div class="summary">
                Same as <a href="M_Hazelcast_Core_IMap_2_Put_1.htm">Put(TKey, TValue, Int64, TimeUnit)</a>
                but MapStore, if defined,
                will not be called to store/persist the entry.  If ttl is 0, then
                the entry lives forever.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Remove.htm">Remove(Object)</a></td><td><div class="summary">Removes the mapping for a key from this map if it is present.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Remove_1.htm">Remove(Object, Object)</a></td><td><div class="summary">Removes the entry for a key only if currently mapped to a given value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveAll.htm">RemoveAll</a></td><td><div class="summary">
             Removes all entries which match with the supplied predicate.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveAsync.htm">RemoveAsync</a></td><td><div class="summary">Asynchronously removes the given key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveEntryListener.htm">RemoveEntryListener</a></td><td><div class="summary">
                Removes the specified entry listener
                Returns silently if there is no such listener added before.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveInterceptor.htm">RemoveInterceptor</a></td><td><div class="summary">Removes the given interceptor for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Replace.htm">Replace(TKey, TValue)</a></td><td><div class="summary">Replaces the entry for a key only if currently mapped to some value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Replace_1.htm">Replace(TKey, TValue, TValue)</a></td><td><div class="summary">Replaces the entry for a key only if currently mapped to a given value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Set.htm">Set(TKey, TValue)</a></td><td><div class="summary">Puts an entry into this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Set_1.htm">Set(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">Puts an entry into this map with a given ttl (time to live) value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Size.htm">Size</a></td><td><div class="summary">Returns the number of entries in this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_SubmitToKey.htm">SubmitToKey</a></td><td><div class="summary">
            Applies the user defined EntryProcessor to the entry mapped by the key.
            Returns immediately with a Task.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryLock.htm">TryLock(TKey)</a></td><td><div class="summary">Tries to acquire the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryLock_1.htm">TryLock(TKey, Int64, TimeUnit)</a></td><td><div class="summary">Tries to acquire the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryLock_2.htm">TryLock(TKey, Int64, TimeUnit, Int64, TimeUnit)</a></td><td><div class="summary">Tries to acquire the lock for the specified key for the specified lease time.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryPut.htm">TryPut</a></td><td><div class="summary">
                Tries to put the given key, value into this map within specified timeout value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryRemove.htm">TryRemove</a></td><td><div class="summary">
                Tries to remove the entry with the given key from this map
                within specified timeout value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Unlock.htm">Unlock</a></td><td><div class="summary">Releases the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Values.htm">Values<span id="LST519516C9_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_28?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Returns a collection clone of the values contained in this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Values_1.htm">Values(IPredicate)</a></td><td><div class="summary">
                Queries the map based on the specified predicate and
                returns the values of matching entries.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Hazelcast_Core_IMap_2.htm">IMap<span id="LST519516C9_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_29?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST519516C9_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST519516C9_30?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script> Interface</a></div><div class="seeAlsoStyle"><a href="N_Hazelcast_Core.htm">Hazelcast.Core Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.</p> </div></body></html>