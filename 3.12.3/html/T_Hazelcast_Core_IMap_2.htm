<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IMap(TKey, TValue) Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IMap%3CTKey%2C TValue%3E interface" /><meta name="System.Keywords" content="Hazelcast.Core.IMap%3CTKey%2C TValue%3E interface" /><meta name="System.Keywords" content="IMap(Of TKey%2C TValue) interface" /><meta name="System.Keywords" content="Hazelcast.Core.IMap(Of TKey%2C TValue) interface" /><meta name="Microsoft.Help.F1" content="Hazelcast.Core.IMap`2" /><meta name="Microsoft.Help.Id" content="T:Hazelcast.Core.IMap`2" /><meta name="Description" content="Concurrent, distributed, observable and queryable map." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Hazelcast.Core" /><meta name="file" content="T_Hazelcast_Core_IMap_2" /><meta name="guid" content="T_Hazelcast_Core_IMap_2" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Hazelcast .Net Client Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\G_Hazelcast_Client.htm" title="Hazelcast .Net Client Class Library" tocid="roottoc">Hazelcast .Net Client Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Hazelcast_Core.htm" title="Hazelcast.Core" tocid="N_Hazelcast_Core">Hazelcast.Core</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Hazelcast_Core_IMap_2.htm" title="IMap(TKey, TValue) Interface" tocid="T_Hazelcast_Core_IMap_2">IMap(TKey, TValue) Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Hazelcast_Core_IMap_2.htm" title="IMap(TKey, TValue) Methods" tocid="Methods_T_Hazelcast_Core_IMap_2">IMap(TKey, TValue) Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Hazelcast-IMDG-Logo-Orange_Dark_200px.jpg" /></td><td class="titleColumn"><h1>IMap<span id="LST9A9508B5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TKey</span>, <span class="typeparameter">TValue</span><span id="LST9A9508B5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
                Concurrent, distributed, observable and queryable map.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Hazelcast_Core.htm">Hazelcast.Core</a><br />
    <strong>Assembly:</strong>
   Hazelcast.Net (in Hazelcast.Net.dll) Version: 3.12.3<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IMap</span>&lt;TKey, TValue&gt; : <span class="identifier">IDistributedObject</span>
</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IMap</span>(<span class="keyword">Of</span> TKey, TValue)
	<span class="keyword">Inherits</span> <span class="identifier">IDistributedObject</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TKey, <span class="keyword">typename</span> TValue&gt;
<span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IMap</span> : <span class="identifier">IDistributedObject</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">IMap</span>&lt;'TKey, 'TValue&gt; =  
    <span class="keyword">interface</span>
        <span class="keyword">interface</span> <span class="identifier">IDistributedObject</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TKey</span></dt><dd>type of the Key</dd><dt><span class="parameter">TValue</span></dt><dd>type of the Value</dd></dl></div><p>The <span class="selflink">IMap<span id="LST9A9508B5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKey, TValue<span id="LST9A9508B5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_2.htm">AddEntryListener(IEntryListener<span id="LST9A9508B5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST9A9508B5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">
                Adds an entry listener for this map.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_6.htm">AddEntryListener(MapListener, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for this map.To receive an event, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener.htm">AddEntryListener(IEntryListener<span id="LST9A9508B5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST9A9508B5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IPredicate, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">Adds an continuous entry listener for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_3.htm">AddEntryListener(IEntryListener<span id="LST9A9508B5_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST9A9508B5_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, TKey, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">Adds the specified entry listener for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_4.htm">AddEntryListener(MapListener, IPredicate, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for this map.To receive an event, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_7.htm">AddEntryListener(MapListener, TKey, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for the specified key, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_1.htm">AddEntryListener(IEntryListener<span id="LST9A9508B5_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKey, TValue<span id="LST9A9508B5_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IPredicate, TKey, Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">Adds an continuous entry listener for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddEntryListener_5.htm">AddEntryListener(MapListener, IPredicate, TKey, Boolean)</a></td><td><div class="summary">
            Adds a <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> for the specified key, you should implement a corresponding 
            <a href="T_Hazelcast_Core_MapListener.htm">MapListener</a> sub-interface for that event.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddIndex.htm">AddIndex</a></td><td><div class="summary">
                Adds an index to this map for the specified entries so
                that queries can run faster.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_AddInterceptor.htm">AddInterceptor</a></td><td><div class="summary">Adds an interceptor for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Aggregate__1.htm">Aggregate<span id="LST9A9508B5_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST9A9508B5_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IAggregator<span id="LST9A9508B5_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST9A9508B5_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Applies the aggregation logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Aggregate__1_1.htm">Aggregate<span id="LST9A9508B5_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST9A9508B5_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IAggregator<span id="LST9A9508B5_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST9A9508B5_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IPredicate)</a></td><td><div class="summary">
            Applies the aggregation logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Clear.htm">Clear</a></td><td><div class="summary">
                Removes all of the mappings from this map (optional operation).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ContainsKey.htm">ContainsKey</a></td><td><div class="summary">
                Determines whether this map contains an entry for the specified key.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ContainsValue.htm">ContainsValue</a></td><td><div class="summary">
                Determines whether this map contains one or more keys to the specified value
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Delete.htm">Delete</a></td><td><div class="summary">
                Removes the mapping for a key from this map if it is present
                (optional operation).
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_Destroy.htm">Destroy</a></td><td><div class="summary">Destroys this object cluster-wide.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_EntrySet.htm">EntrySet<span id="LST9A9508B5_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_20?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
                Returns a
                <span class="nolink">ISet<span id="LST9A9508B5_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_21?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST9A9508B5_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_22?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span>
                clone of the mappings contained in this map.
                The set is <b>NOT</b> backed by the map,
                so changes to the map are <b>NOT</b> reflected in the set, and vice-versa.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_EntrySet_1.htm">EntrySet(IPredicate)</a></td><td><div class="summary">
                Queries the map based on the specified predicate and
                returns the matching entries.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Evict.htm">Evict</a></td><td><div class="summary">Evicts the specified key from this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_EvictAll.htm">EvictAll</a></td><td><div class="summary">Evicts all keys from this map except the locked ones.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnEntries.htm">ExecuteOnEntries(IEntryProcessor)</a></td><td><div class="summary">Applies the user defined EntryProcessor to the all entries in the map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnEntries_1.htm">ExecuteOnEntries(IEntryProcessor, IPredicate)</a></td><td><div class="summary">
                Applies the user defined EntryProcessor to the entries in the map which satisfies provided predicate.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnKey.htm">ExecuteOnKey</a></td><td><div class="summary">Applies the user defined EntryProcessor to the entry mapped by the key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ExecuteOnKeys.htm">ExecuteOnKeys</a></td><td><div class="summary">Applies the user defined EntryProcessor to the entries mapped by the collection of keys.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Flush.htm">Flush</a></td><td><div class="summary">
                If this map has a MapStore this method flushes
                all the local dirty entries by calling <span class="code">MapStore.storeAll()</span> and/or <span class="code">MapStore.deleteAll()</span></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_ForceUnlock.htm">ForceUnlock</a></td><td><div class="summary">Releases the lock for the specified key regardless of the lock owner.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Get.htm">Get</a></td><td><div class="summary">
                Returns the value for the specified key, or <span class="code">null</span> if this map does not contain this key.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_GetAll.htm">GetAll</a></td><td><div class="summary">Returns the entries for the given keys.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_GetAsync.htm">GetAsync</a></td><td><div class="summary">Asynchronously gets the given key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_GetEntryView.htm">GetEntryView</a></td><td><div class="summary">Returns the <span class="code">EntryView</span> for the specified key.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetName.htm">GetName</a></td><td><div class="summary">Returns the unique name for this IDistributedObject.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetPartitionKey.htm">GetPartitionKey</a></td><td><div class="summary">Returns the key of partition this IDistributedObject is assigned to.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IDistributedObject_GetServiceName.htm">GetServiceName</a></td><td><div class="summary">Returns the service name for this object.</div> (Inherited from <a href="T_Hazelcast_Core_IDistributedObject.htm">IDistributedObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_IsEmpty.htm">IsEmpty</a></td><td><div class="summary">Returns <span class="code">true</span> if this map contains no entries.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_IsLocked.htm">IsLocked</a></td><td><div class="summary">Checks the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_KeySet.htm">KeySet<span id="LST9A9508B5_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_23?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Returns a set clone of the keys contained in this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_KeySet_1.htm">KeySet(IPredicate)</a></td><td><div class="summary">
                Queries the map based on the specified predicate and
                returns the keys of matching entries.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Lock.htm">Lock(TKey)</a></td><td><div class="summary">Acquires the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Lock_1.htm">Lock(TKey, Int64, TimeUnit)</a></td><td><div class="summary">Acquires the lock for the specified key for the specified lease time.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Project__1.htm">Project<span id="LST9A9508B5_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_24?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST9A9508B5_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_25?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IProjection)</a></td><td><div class="summary">
            Applies the projection logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Project__1_1.htm">Project<span id="LST9A9508B5_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST9A9508B5_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(IProjection, IPredicate)</a></td><td><div class="summary">
            Applies the projection logic on all map entries and returns the result
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Put.htm">Put(TKey, TValue)</a></td><td><div class="summary">
                Associates the specified value with the specified key in this map
                If the map previously contained a mapping for
                the key, the old value is replaced by the specified value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Put_1.htm">Put(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">Puts an entry into this map with a given ttl (time to live) value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutAll.htm">PutAll</a></td><td><div class="summary">
                Copies all of the mappings from the specified map to this map
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutAsync.htm">PutAsync(TKey, TValue)</a></td><td><div class="summary">Asynchronously puts the given key and value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutAsync_1.htm">PutAsync(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">Asynchronously puts the given key and value into this map with a given ttl (time to live) value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutIfAbsent.htm">PutIfAbsent(TKey, TValue)</a></td><td><div class="summary">
                If the specified key is not already associated
                with a value, associate it with the given value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutIfAbsent_1.htm">PutIfAbsent(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">
                Puts an entry into this map with a given ttl (time to live) value
                if the specified key is not already associated with a value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_PutTransient.htm">PutTransient</a></td><td><div class="summary">
                Same as <a href="M_Hazelcast_Core_IMap_2_Put_1.htm">Put(TKey, TValue, Int64, TimeUnit)</a>
                but MapStore, if defined,
                will not be called to store/persist the entry.  If ttl is 0, then
                the entry lives forever.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Remove.htm">Remove(Object)</a></td><td><div class="summary">Removes the mapping for a key from this map if it is present.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Remove_1.htm">Remove(Object, Object)</a></td><td><div class="summary">Removes the entry for a key only if currently mapped to a given value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveAll.htm">RemoveAll</a></td><td><div class="summary">
             Removes all entries which match with the supplied predicate.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveAsync.htm">RemoveAsync</a></td><td><div class="summary">Asynchronously removes the given key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveEntryListener.htm">RemoveEntryListener</a></td><td><div class="summary">
                Removes the specified entry listener
                Returns silently if there is no such listener added before.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_RemoveInterceptor.htm">RemoveInterceptor</a></td><td><div class="summary">Removes the given interceptor for this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Replace.htm">Replace(TKey, TValue)</a></td><td><div class="summary">Replaces the entry for a key only if currently mapped to some value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Replace_1.htm">Replace(TKey, TValue, TValue)</a></td><td><div class="summary">Replaces the entry for a key only if currently mapped to a given value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Set.htm">Set(TKey, TValue)</a></td><td><div class="summary">Puts an entry into this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Set_1.htm">Set(TKey, TValue, Int64, TimeUnit)</a></td><td><div class="summary">Puts an entry into this map with a given ttl (time to live) value.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Size.htm">Size</a></td><td><div class="summary">Returns the number of entries in this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_SubmitToKey.htm">SubmitToKey</a></td><td><div class="summary">
            Applies the user defined EntryProcessor to the entry mapped by the key.
            Returns immediately with a Task.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryLock.htm">TryLock(TKey)</a></td><td><div class="summary">Tries to acquire the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryLock_1.htm">TryLock(TKey, Int64, TimeUnit)</a></td><td><div class="summary">Tries to acquire the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryLock_2.htm">TryLock(TKey, Int64, TimeUnit, Int64, TimeUnit)</a></td><td><div class="summary">Tries to acquire the lock for the specified key for the specified lease time.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryPut.htm">TryPut</a></td><td><div class="summary">
                Tries to put the given key, value into this map within specified timeout value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_TryRemove.htm">TryRemove</a></td><td><div class="summary">
                Tries to remove the entry with the given key from this map
                within specified timeout value.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Unlock.htm">Unlock</a></td><td><div class="summary">Releases the lock for the specified key.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Values.htm">Values<span id="LST9A9508B5_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9A9508B5_28?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Returns a collection clone of the values contained in this map.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Hazelcast_Core_IMap_2_Values_1.htm">Values(IPredicate)</a></td><td><div class="summary">
                Queries the map based on the specified predicate and
                returns the values of matching entries.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection">
                Concurrent, distributed, observable and queryable map.
                <p /><p><b>
                        This class is <i>not</i> a general-purpose <span class="code">ConcurrentMap</span> implementation! While this class
                        implements
                        the <span class="code">Map</span> interface, it intentionally violates <span class="code">Map's</span> general contract, which mandates the
                        use of the <span class="code">Equals</span> method when comparing objects. Instead of the <span class="code">Equals</span> method this
                        implementation compares the serialized byte version of the objects.
                    </b></p><p /><p><b>Gotchas:</b><ul><li>
                            Methods, including but not limited to <span class="code">Get</span>, <span class="code">ContainsKey</span>,
                            <span class="code">ContainsValue</span>, <span class="code">Evict</span>, <span class="code">Remove</span>, <span class="code">Put</span>,
                            <span class="code">PutIfAbsent</span>, <span class="code">Replace</span>, <span class="code">Lock</span>,
                            <span class="code">Unlock</span>, do not use <span class="code">GetHashCode</span> and <span class="code">Equals</span> implementations of keys,
                            instead they use <span class="code">GetHashCode</span> and <span class="code">Equals</span> of binary (serialized) forms of the objects.
                        </li><li><span class="code">Get</span> method returns a clone of original values, modifying the returned value does not
                            change the actual value in the map. One should put modified value back to make changes visible to all
                            nodes.
                            For additional info see
                            <a href="M_Hazelcast_Core_IMap_2_Get.htm">IMap&lt;K, V&gt;.Get(object)</a></li><li>
                            Methods, including but not limited to <span class="code">KeySet</span>, <span class="code">Values</span>, <span class="code">EntrySet</span>,
                            return a collection clone of the values. The collection is <b>NOT</b> backed by the map,
                            so changes to the map are <b>NOT</b> reflected in the collection, and vice-versa.
                        </li></ul></p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Hazelcast_Core.htm">Hazelcast.Core Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2008-2019, Hazelcast, Inc. All Rights Reserved.</p> </div></body></html>